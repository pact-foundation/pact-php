name: Code Analysis & Test

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  php-cs:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        name: Checkout repository

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          php-version: 8.1
          coverage: none

      - uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: Code Style Analysis
        run: composer run lint

      - name: Static Code Analysis
        run: composer run static-code-analysis

  examples:
    runs-on: ${{ matrix.os }}
    needs:
      - php-cs
    strategy:
      fail-fast: false
      matrix:
        php: [8.3]
        os: [ubuntu-latest, macos-13, macos-14, windows-latest, ubuntu-24.04-arm]
    timeout-minutes: 5

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        name: Checkout repository

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          extensions: sockets, curl, zip, ffi, grpc
          php-version: ${{ matrix.php }}
          coverage: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Composer install
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: 'locked'

      - name: Cache Pact Plugins
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4
        with:
          path: ~/.pact/plugins
          key: ${{ matrix.os }}-pact-plugins

      - name: Run examples
        run: composer run-examples
        env:
          PACT_DO_NOT_TRACK: true

  unit:
    runs-on: ubuntu-latest
    needs:
      - php-cs
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.1', '8.2', '8.3', '8.4' ]
        dependencies: [ 'lowest', 'locked' ]

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        name: Checkout repository

      - name: Setup PHP
        uses: shivammathur/setup-php@20529878ed81ef8e78ddf08b480401e6101a850f # v2
        with:
          extensions: 'sockets, curl, zip, ffi'
          php-version: ${{ matrix.php }}
          coverage: pcov

      - name: Composer install
        uses: ramsey/composer-install@v3
        with:
          dependency-versions: ${{ matrix.dependencies }}

      - name: Test Unit
        run: composer test-coverage
        env:
          PACT_DO_NOT_TRACK: true

      - name: Coveralls Parallel
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2
        with:
          flag-name: ${{ matrix.php }}-${{ matrix.dependencies }}
          parallel: true
          file: test_results/reports/test_coverage_results.xml

  finish:
    needs: unit
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2
      with:
        parallel-finished: true

  test-alpine:
    runs-on: ${{ matrix.os }}
    needs:
      - php-cs
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-24.04-arm]

    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
        name: Checkout repository
      - name: run musl # If shared-mime-info not installed - Expected binary contents to have content type 'image/jpeg' but detected contents was 'application/octet-stream'
        run: docker run --env PACT_DO_NOT_TRACK=true --rm -v $PWD:/home alpine:3.19 /bin/sh -c 'apk add --no-cache shared-mime-info php82-dev php82-ffi php82-pecl-grpc php82-sockets php82-tokenizer php82-dom php82-xml php82-xmlwriter php82-simplexml composer protobuf-dev && cd /home && composer install && composer test && composer run-examples'
