{
    "name": "pact-foundation/pact-php",
    "keywords": [
        "pact",
        "pact-php"
    ],
    "homepage": "https://github.com/pact-foundation/pact-php",
    "description": "Enables consumer driven contract testing, following the PACT foundation principles.",
    "license": "MIT",
    "authors": [
        {
            "name": "Mattermack",
            "email": "c.f.mack@gmail.com"
        },
        {
            "name": "Nicholas Brink",
            "email": "nick.brink@mattersight.com"
        }
    ],
    "require": {
        "php": "^8.1",
        "ext-openssl": "*",
        "ext-ffi": "*",
        "ext-json": "*",
        "composer/semver": "^1.4.0|^3.2.0",
        "symfony/process": "^5.4|^6.0|^7.0",
        "guzzlehttp/psr7": "^2.4.5",
        "pact-foundation/composer-downloads-plugin": "^2.1"
    },
    "require-dev": {
        "ext-sockets": "*",
        "roave/security-advisories": "dev-latest",
        "friendsofphp/php-cs-fixer": "^3.0",
        "phpstan/phpstan": "^2.0.4",
        "phpunit/phpunit": "^10.1.0|^11.0",
        "guzzlehttp/guzzle": "^7.8",
        "behat/behat": "^3.13",
        "galbar/jsonpath": "^3.0",
        "ramsey/uuid": "^4.7",
        "pact-foundation/example-protobuf-sync-message-provider": "@dev",
        "webonyx/graphql-php": "^15.14",
        "rector/rector": "^2.0",
        "clue/framework-x": "^0.17.0"
    },
    "autoload": {
        "psr-4": {
            "PhpPact\\": "src/PhpPact"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "PhpPactTest\\": "tests/PhpPact",
            "PhpPactTest\\CompatibilitySuite\\": "compatibility-suite/tests",
            "PhpPactTest\\Helper\\": "helper"
        }
    },
    "scripts": {
        "start-provider": "echo 'removed in 10.x' & exit 1",
        "static-code-analysis": "phpstan",
        "lint": "php-cs-fixer fix --dry-run",
        "fix": "php-cs-fixer fix",
        "test": "phpunit --no-coverage",
        "test-coverage": "phpunit",
        "check-compatibility": "behat",
        "refactor": "rector",
        "run-examples": [
            "composer run-example:binary",
            "composer run-example:csv",
            "composer run-example:generators",
            "composer run-example:json",
            "composer run-example:matchers",
            "composer run-example:message",
            "composer run-example:multipart",
            "composer run-example:protobuf-async-message",
            "composer run-example:protobuf-sync-message",
            "composer run-example:stub-server",
            "composer run-example:xml",
            "composer run-example:graphql",
            "composer run-example:form-urlencoded"
        ],
        "run-example:binary": [
            "rm -f example/binary/pacts/binaryConsumer-binaryProvider.json",
            "cd example/binary/consumer && phpunit",
            "cd example/binary/provider && phpunit"
        ],
        "run-example:csv": [
            "rm -f example/csv/pacts/csvConsumer-csvProvider.json",
            "cd example/csv/consumer && phpunit",
            "cd example/csv/provider && phpunit"
        ],
        "run-example:generators": [
            "rm -f example/generators/pacts/generatorsConsumer-generatorsProvider.json",
            "cd example/generators/consumer && phpunit",
            "cd example/generators/provider && phpunit"
        ],
        "run-example:json": [
            "rm -f example/json/pacts/jsonConsumer-jsonProvider.json",
            "cd example/json/consumer && phpunit",
            "cd example/json/provider && phpunit"
        ],
        "run-example:matchers": [
            "rm -f example/matchers/pacts/matchersConsumer-matchersProvider.json",
            "cd example/matchers/consumer && phpunit",
            "cd example/matchers/provider && phpunit"
        ],
        "run-example:message": [
            "rm -f example/message/pacts/messageConsumer-messageProvider.json",
            "cd example/message/consumer && phpunit",
            "cd example/message/provider && phpunit"
        ],
        "run-example:multipart": [
            "rm -f example/multipart/pacts/multipartConsumer-multipartProvider.json",
            "cd example/multipart/consumer && phpunit",
            "cd example/multipart/provider && phpunit"
        ],
        "run-example:protobuf-async-message": [
            "rm -f example/protobuf-async-message/pacts/protobufAsyncMessageConsumer-protobufAsyncMessageProvider.json",
            "protoc --php_out=example/protobuf-async-message/library/src example/protobuf-async-message/library/proto/say_hello.proto",
            "cd example/protobuf-async-message/consumer && phpunit",
            "cd example/protobuf-async-message/provider && phpunit"
        ],
        "run-example:protobuf-sync-message": [
            "rm -f example/protobuf-sync-message/pacts/protobufSyncMessageConsumer-protobufSyncMessageProvider.json",
            "protoc --php_out=example/protobuf-sync-message/library/src example/protobuf-sync-message/library/proto/area_calculator.proto",
            "cd example/protobuf-sync-message/consumer && phpunit",
            "cd example/protobuf-sync-message/provider && phpunit"
        ],
        "run-example:stub-server": [
            "cd example/stub-server/consumer && phpunit"
        ],
        "run-example:xml": [
            "rm -f example/xml/pacts/xmlConsumer-xmlProvider.json",
            "cd example/xml/consumer && phpunit",
            "cd example/xml/provider && phpunit"
        ],
        "run-example:graphql": [
            "rm -f example/graphql/pacts/graphqlConsumer-graphqlProvider.json",
            "cd example/graphql/consumer && phpunit",
            "cd example/graphql/provider && phpunit"
        ],
        "run-example:form-urlencoded": [
            "rm -f example/graphql/pacts/formUrlEncodedConsumer-formUrlEncodedProvider.json",
            "cd example/form-urlencoded/consumer && phpunit",
            "cd example/form-urlencoded/provider && phpunit"
        ]
    },
    "extra": {
        "downloads": {
            "pact-ffi-headers": {
                "version": "0.4.26",
                "url": "https://github.com/pact-foundation/pact-reference/releases/download/libpact_ffi-v{$version}/pact.h",
                "path": "bin/pact-ffi-headers/pact.h"
            },
            "pact-ffi-lib": {
                "version": "0.4.26",
                "variables": {
                    "{$prefix}": "PHP_OS_FAMILY === 'Windows' ? 'pact_ffi' : 'libpact_ffi'",
                    "{$os}": "PHP_OS === 'Darwin' ? 'macos' : strtolower(PHP_OS_FAMILY)",
                    "{$architecture}": "in_array(php_uname('m'), ['arm64', 'aarch64']) ? 'aarch64' : 'x86_64'",
                    "{$musl}": "PHP_OS === 'Linux' && musl() === true ? '-musl' : ''",
                    "{$extension}": "PHP_OS_FAMILY === 'Windows' ? 'dll' : (PHP_OS === 'Darwin' ? 'dylib' : 'so')"
                },
                "url": "https://github.com/pact-foundation/pact-reference/releases/download/libpact_ffi-v{$version}/{$prefix}-{$os}-{$architecture}{$musl}.{$extension}.gz",
                "path": "bin/pact-ffi-lib/pact.{$extension}"
            },
            "pact-stub-server": {
                "version": "0.6.0",
                "variables": {
                    "{$os}": "PHP_OS === 'Darwin' ? 'osx' : strtolower(PHP_OS_FAMILY)",
                    "{$architecture}": "in_array(php_uname('m'), ['arm64', 'aarch64']) ? 'aarch64' : 'x86_64'",
                    "{$extension}": "PHP_OS_FAMILY === 'Windows' ? '.exe' : ''"
                },
                "url": "https://github.com/pact-foundation/pact-stub-server/releases/download/v{$version}/pact-stub-server-{$os}-{$architecture}{$extension}.gz",
                "path": "bin/pact-stub-server/pact-stub-server{$extension}",
                "executable": true
            }
        }
    },
    "config": {
        "allow-plugins": {
            "pact-foundation/composer-downloads-plugin": true
        }
    },
    "repositories": [
        {
            "type": "path",
            "url": "example/protobuf-sync-message/provider"
        }
    ]
}
